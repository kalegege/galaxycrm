<?xml version="1.0" encoding="GBK" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wasu.ptyw.activitylottery.dal.dao.ActivityPagenameRealnameDAO">

      <resultMap type="ActivityPagenameRealnameDO" id="BaseResultMap">
		<result column="id" property="id" javaType="java.lang.Long" />
		<result column="pagename" property="pagename" javaType="java.lang.String" />
		<result column="realname" property="realname" javaType="java.lang.String" />
		<result column="gmt_create" property="gmtCreate" javaType="java.util.Date" />
		<result column="gmt_modified" property="gmtModified" javaType="java.util.Date" />
     </resultMap>
    
    <sql id="Base_Column_List">
	id,	realname,pagename, gmt_create,	gmt_modified
    </sql>
    
    <sql id="Base_Where_Clause">
        WHERE id = #{id}
    </sql>
    
    <sql id="queryCondition">    	
		<trim prefix="where" prefixOverrides="and"> 
		    <if test="pagename != null">
		        and pagename = #{pagename} 
		    </if> 
		    <if test="realname != null">
		        and realname = #{realname} 
		    </if>
		</trim>
	</sql>
	
    <insert id="insert" parameterType="ActivityPagenameRealnameDO" useGeneratedKeys="true" keyProperty="id">
        insert into activity_pagename_realname (
		<if test="realname != null">
		   realname,
		</if>
		<if test="pagename != null">
		   pagename,
		</if> 
		gmt_create, gmt_modified		
        ) values (
		<if test="realname != null">
	       #{realname},
	    </if>
		<if test="pagename != null">
	       #{pagename},
	    </if>
	    now(), now()
        )
    </insert>
   
    <update id="update" parameterType="ActivityPagenameRealnameDO">
        update activity_pagename_realname
        <trim prefix="set">
		    <if test="realname != null">
		        realname = #{realname},
		    </if> 
		    <if test="pagename != null">
		        pagename = #{pagename},
		    </if>
		    GMT_MODIFIED = now()
        </trim>        
        <include refid="Base_Where_Clause" />
    </update>    
   
    <delete id="deleteById">
        delete from activity_pagename_realname
        <include refid="Base_Where_Clause" />
    </delete>
    
    
    <delete id="deleteByQuery" parameterType="ActivityPagenameRealnameQuery">
        delete from activity_pagename_realname
        <include refid="queryCondition" />
    </delete>
    
    <select id="getById" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from activity_pagename_realname
        <include refid="Base_Where_Clause" />
    </select>
    
    <select id="getByIds" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from activity_pagename_realname
        WHERE id IN
	  	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
	        #{item}
	  	</foreach>
    </select>   
    
    <select id="queryCount" resultType="int" parameterType="ActivityPagenameRealnameQuery">
		select count(*) from activity_pagename_realname
		<include refid="queryCondition" />
	</select> 
	
	<select id="query" resultMap="BaseResultMap" parameterType="ActivityPagenameRealnameQuery">
		select 
        	<include refid="Base_Column_List" />
        from activity_pagename_realname
			<include refid="queryCondition" />
		<if test="orderBy != null">
	        order by ${orderBy}	
	    </if> 	
		limit #{pageFirstItem}, #{pageSize}
	</select>
      
      
    <!-- ×ÜÊý -->
    <select id="count" resultType="int" parameterType="ActivityPagenameRealnameQuery">
       SELECT count(*) from activity_pagename_realname <include refid="queryCondition" />
	</select>
	    
    <!-- ¼ÇÂ¼ -->
    <select id="statistics" resultMap="BaseResultMap" parameterType="ActivityPagenameRealnameQuery">
       SELECT * from activity_pagename_realname  <include refid="queryCondition" />
        limit #{pageFirstItem}, #{pageSize}
	</select>
	
	
</mapper>
